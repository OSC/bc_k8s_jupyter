<%
   pwd_cfg = "c.NotebookApp.password=u\'sha1:${SALT}:${PASSWORD_SHA1}\'"
   host_port_cfg = "c.NotebookApp.base_url=\'/node/${HOST_CFG}/${PORT_CFG}/\'"

   configmap_filename = "ondemand_config.py"
   configmap_data = "c.NotebookApp.port = 8080"
   utility_img = "docker-registry.osc.edu/ondemand/ood-k8s-utils:2.6"

   groups = OodSupport::Process.groups.map(&:name).reject { |group| /^P.+$/.match(group).nil? }
   account = groups.first if account.nil? || account.eql?("")
%>
---
script:
  accounting_id: "<%= account %>"
  wall_time: "<%= wall_time.to_i * 3600 %>"
  native:
    container:
      name: "jupyter"
      image: "docker-registry.osc.edu/ondemand/scipy-notebook"
      command: "/usr/local/bin/start.sh /opt/conda/bin/jupyter notebook --config=/ood/ondemand_config.py"
      working_dir: "<%= Etc.getpwnam(ENV['USER']).dir %>"
      restart_policy: 'OnFailure'
      env:
        NB_UID: "<%= Etc.getpwnam(ENV['USER']).uid %>"
        NB_USER: "<%= ENV['USER'] %>"
        NB_GID: "<%= Etc.getpwnam(ENV['USER']).gid %>"
        HOME: "<%= Etc.getpwnam(ENV['USER']).dir %>"
      port: "8080"
      cpu: "<%= cpu %>"
      memory: "<%= memory %>Gi"
    configmap:
      files:
        - filename: "<%= configmap_filename %>"
          data: |
            c.NotebookApp.port = 8080
            c.NotebookApp.ip = '0.0.0.0'
            c.NotebookApp.disable_check_xsrf = True
            c.NotebookApp.allow_origin = '*'
            c.Application.log_level = 'DEBUG'
    init_containers:
    - name: "init-secret"
      image: "<%= utility_img %>"
      command: 
      - "/bin/save_passwd_as_secret"
      - "user-<%= ENV['USER'] %>"
    - name: "add-passwd-to-cfg"
      image: "<%= utility_img %>"
      command:
      - "/bin/bash"
      - "-c"
      - "source /bin/passwd_from_secret; source /bin/create_salt_and_sha1; /bin/add_line_to_configmap \\\"<%= pwd_cfg %>\\\" <%= configmap_filename %>"
    - name: "add-hostport-to-cfg"
      image: "<%= utility_img %>"
      command:
      - "/bin/bash"
      - "-c"
      - "source /bin/find_host_port; /bin/add_line_to_configmap \\\"<%= host_port_cfg %>\\\" <%= configmap_filename %>"
